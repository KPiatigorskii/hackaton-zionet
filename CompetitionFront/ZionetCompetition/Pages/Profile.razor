@page "/profile"
@using CoreTweet;
@using Microsoft.AspNetCore.Authentication
@using Microsoft.AspNetCore.Authentication.OAuth
@using Microsoft.AspNetCore.Components.Forms
@using ZionetCompetition.Services
@inject NavigationManager Navigation
@inject IJSRuntime JSRuntime
@inject Microsoft​.AspNetCore​.Http.IHttpContextAccessor HttpContextAccessor

@inject IConfiguration Configuration

@if (twitterIsConnected)
{
    <div> You successfully connect to twitter with id @twitterUserId</div>
}
else
{
    <Button Color="Color.Primary" Clicked=@BeginLogin hidden="@(!twitFormHidden)">Connect Twitter</Button>

    <EditForm Model="@exampleModel" OnSubmit="@ConfirmPinCode" hidden="@twitFormHidden">
        <InputText id="PINCode" @bind-Value="exampleModel.PINCode" />

        <Button Color="Color.Primary" Type="ButtonType.Submit" >Confirm PINcode</Button>
    </EditForm>
}


@code{

    public class ExampleModel
    {
        public string? PINCode { get; set; }
    }

    public string redirectUrl;
    private string strValue;
    private bool twitFormHidden = true;
    private CoreTweet.OAuth.OAuthSession twitterSession;
    public ExampleModel exampleModel = new();
    private bool twitterIsConnected = false;
    private long twitterUserId = 0;

    protected override async Task OnInitializedAsync()
    {
        twitterIsConnected = HttpContextAccessor.HttpContext.User.Claims.FirstOrDefault(e => e.Type == "twitter") != null;
        if (!twitterIsConnected) // add authentication condition
        {
            twitterSession = OAuth.Authorize(Configuration.GetSection("Twitter:TWITTER_API_KEY").Value,
                                        Configuration.GetSection("Twitter:TWITTER_API_SECRET").Value);
            redirectUrl = twitterSession.AuthorizeUri.AbsoluteUri;
        }
    }

    private async Task BeginLogin()
    {
        twitFormHidden = false;
        StateHasChanged();
        await JSRuntime.InvokeVoidAsync("open", redirectUrl, "_blank");
        //Navigation.NavigateTo(redirectUrl);
    }

    private async Task ConfirmPinCode()
    {
        var tokens = OAuth.GetTokens(twitterSession, exampleModel.PINCode);
        twitterUserId = tokens.UserId; //  put this id to db
        if (twitterUserId != 0) // put this id to db 
        {
            twitterIsConnected = true;
            StateHasChanged();
        }

    }


}